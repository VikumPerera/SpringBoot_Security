#Mysql properties
spring.jpa.hibernate.ddl-auto=validate
spring.datasource.url=jdbc:mysql://localhost:3306/access_manager?createDatabaseIfNotExist=true
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=password
spring.jpa.show-sql=true

spring.jpa.hibernate.use-new-id-generator-mappings=false


security.oauth2.client.registration.api-client-oidc.provider=spring
security.oauth2.client.registration.api-client-oidc.client-id=api-client
security.oauth2.client.registration.api-client-oidc.client-secret=secret
security.oauth2.client.registration.api-client-oidc.authorization-grant-type=authorization_code
security.oauth2.client.registration.api-client-oidc.redirect-uri="http://127.0.0.1:8080/login/oauth2/code/{registrationId}"
security.oauth2.client.registration.api-client-oidc.scope=openid
security.oauth2.client.registration.api-client-oidc.client-name=api-client-oidc


security.oauth2.client.registration.api-client-authorization-code.provider=spring
security.oauth2.client.registration.api-client-authorization-code.client-id=api-client
security.oauth2.client.registration.api-client-authorization-code.client-secret=secret
security.oauth2.client.registration.api-client-authorization-code.authorization-grant-type=authorization_code
security.oauth2.client.registration.api-client-authorization-code.redirect-uri="http://127.0.0.1:8080/authorized"
security.oauth2.client.registration.api-client-authorization-code.scope=api.read
security.oauth2.client.registration.api-client-authorization-code.client-name=api-client-authorization-code


security.oauth2.client.provider.spring.issuer-uri=http://auth-server:9000

jwt.secret= 123BGTH_ujjh65gftbg5egjerg!!345*(&8nfnfhrt4gdds)))9-deddhty523)98___)87543..6r4

flyway.baseline-on-migrate=true
